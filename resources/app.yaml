apiVersion: v2
kind: Application
metadata:
  repository: gravitational.io
  name: stolon-app
  resourceVersion: 0.0.1
  namespace: kube-system
base: gravitational.io/kubernetes:0.0.0+latest
dependencies:
  apps:
    - gravitational.io/cluster-ssl-app:0.0.0+latest
service_labels:
  stolon-postgres: "yes"
installer:
  providers:
    onprem:
      docker:
        backend: overlay
      provisioners:
        virsh:
          variables:
            ram_mb: 2500
            devices:
              - device: vdb
                mb: 10500
              - device: vdc
                mb: 10500
          commands:
            - 'sudo hostname {{ .server.hostname }}'
            - 'echo $(netstat -rn | grep UG | awk ''{print $2}'') {{ .variables.system.teleport_proxy_address }} | sudo tee -a /etc/hosts'
            - 'sudo mkfs.ext4 /dev/vdc'
            - 'sudo mkdir -p /var/lib/data/stolon && sudo mount /dev/vdc /var/lib/data/stolon'
            - 'curl --tlsv1.2 {{if .variables.system.devmode}}--insecure{{end}} "{{ .variables.system.ops_url }}/{{ .variables.system.token }}/auto?docker_device=vdb&mount=stolon-data:/var/lib/data/stolon" | sudo bash'
  servers:
    node:
      cpu:
        min_count: 2
      description: "stolon server"
      labels:
        role: "node"
        stolon-keeper: "yes"
      ram:
        min_total_mb: 2000
      directories:
        - name: /var/lib/gravity
          min_total_mb: 4000
      mounts:
        - name: stolon-data
          source: /var/lib/data/stolon
          destination: /var/lib/data/stolon
          min_total_mb: 4000
          fs_types: ["ext4", "xfs"]
          create_if_missing: true
      instance_types:
        aws_terraform:
          - m3.large
          - m3.xlarge
          - c3.large
          - c3.xlarge
          - c3.2xlarge
          - c3.4xlarge
          - i2.xlarge
          - i2.2xlarge
  flavors:
    title: "Select a flavor"
    items:
      - name: "one"
        description: "1 node"
        threshold:
          value: 1
          label: "1"
        profiles:
          node: 1
      - name: "three"
        description: "3 nodes"
        threshold:
          value: 3
          label: "3"
        profiles:
          node: 3
      - name: "five"
        description: "5 nodes"
        threshold:
          value: 5
          label: "5"
        profiles:
          node: 5
hooks:
  install:
    spec:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: stolon-app-install
      spec:
        template:
          metadata:
            name: stolon-app-install
          spec:
            restartPolicy: OnFailure
            containers:
              - name: bootstrap
                image: stolon-bootstrap:latest
  update:
    spec:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: stolon-app-update
      spec:
        parallelism: 1
        completions: 1
        activeDeadlineSeconds: 120
        template:
          metadata:
            name: stolon-app-update
          spec:
            restartPolicy: Never
            containers:
              - name: hook
                image: stolon-hook:latest
                args: ["update"]
  rollback:
    spec:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: stolon-app-rollback
      spec:
        parallelism: 1
        completions: 1
        activeDeadlineSeconds: 120
        template:
          metadata:
            name: stolon-app-rollback
          spec:
            restartPolicy: Never
            containers:
              - name: hook
                image: stolon-hook:latest
                args: ["rollback"]
  uninstall:
    spec:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: stolon-app-uninstall
      spec:
        template:
          metadata:
            name: stolon-app-uninstall
          spec:
            restartPolicy: OnFailure
            containers:
              - name: bootstrap
                image: stolon-uninstall:latest
